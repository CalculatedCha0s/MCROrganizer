<UserControl x:Class="MCROrganizer.Core.View.MainControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MCROrganizer.Core.View"
             xmlns:viewModel ="clr-namespace:MCROrganizer.Core.ViewModel"
             mc:Ignorable="d" 
             Width="{Binding ControlWidth}"
             Height="{Binding ControlHeight}"
             Background="Gray">
    <!-- Bind the control's DataContext to the class that will govern all the logic. -->
    <!--<UserControl.DataContext>
        <viewModel:ControlLogic x:Name="controlLogic"/>
    </UserControl.DataContext>-->
    <Canvas Width="{Binding ControlWidth}" Height="{Binding ControlHeight}">
        <Grid Width="{Binding ItemsControlWidth}" Margin="{Binding ItemsControlMargins}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>
            <Canvas Grid.Row="0" Grid.Column="0" Background="Turquoise" />
            <Canvas Grid.Row="0" Grid.Column="1" Background="Blue" />
        </Grid>
        <ItemsControl x:Name="buttonsItemsControl" ItemsSource="{Binding Runs}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="{Binding ItemsControlMargins}" Width="Auto" >
            <ItemsControl.Style>
                <Style TargetType="{x:Type ItemsControl}">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <Canvas />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ItemsControl.Style>
        </ItemsControl>
    </Canvas>
    <UserControl.ContextMenu>
        <ContextMenu>
            <!-- Add Run command -->
            <MenuItem Header="Add Run" Command="{Binding Path=PlacementTarget.DataContext.AddRunCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" ToolTip="Add another run.">
                <MenuItem.Icon>
                    <Image Source="{Binding AddRunImage}" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <!-- Save Run command -->
            <MenuItem Header="Save Run" Command="{Binding Path=PlacementTarget.DataContext.SaveRunCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" ToolTip="Saves all the information about the current runs for reusability in the current template.">
                <MenuItem.Icon>
                    <Image Source="{Binding SaveRunImage}" />
                </MenuItem.Icon>
            </MenuItem>
            <!-- Save Run As command -->
            <MenuItem Header="Save Run As" Command="{Binding Path=PlacementTarget.DataContext.SaveRunAsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" ToolTip="Saves all the information about the current runs for reusability in a new template.">
                <MenuItem.Icon>
                    <Image Source="{Binding SaveRunAsImage}" />
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <!-- Load Run -->
            <MenuItem Header="Load Run" Command="{Binding Path=PlacementTarget.DataContext.LoadRunCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" ToolTip="Loads an already existing run template.">
                <MenuItem.Icon>
                    <Image Source="{Binding LoadRunImage}" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.ContextMenu>
</UserControl>
